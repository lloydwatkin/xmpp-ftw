<% 
    pageTitle = "Extensions"
%>
<% include ./partials/head %>
        
        <p>This page covers additional extensions for XMPP-FTW. The first of these will be 
        supporting <a href="http://www.superfeedr.com" target="_blank">SuperFeedr</a> with 
        <a href="http://www.buddycloud.com" target="_blank">buddycloud</a> coming after 
        that.</p>

        <p><strong>Note:</strong> It is planned that these extensions will be seperated 
        from the main XMPP-FTW package, but in the short term they are included, but 
        not loaded by default.</p>

        <p>These extensions are loaded into the XMPP-FTW 
        <a href="/demo" title="XMPP-FTW Demo">demo client</a>. This document follows the 
        <a href="/manual#colour-conventions">conventions</a> of the main 
        <a href="/manual">manual page</a>.</p> 
        
        <div id="toc"></div>
        
        <h2>SuperFeedr</h2>

        <p>For more information about the Superfeedr XMPP API please see: 
        <a href="http://superfeedr.com/documentation#pubsubhubbub" target="_blank">
        http://superfeedr.com/documentation#pubsubhubbub</a>.</p>

        <h3>Subscribe to a feed</h3>
        
        <p>Whilst superfeedr allows users to subscribe to multiple feeds in one request 
        for simplicity this is restricted to a single subscription per request.</p>

        <pre class="out callback" message="xmpp.superfeedr.subscribe">
        socket.emit(
            'xmpp.superfeedr.subscribe',
            {                
                "feed": "http://www.evilprofessor.co.uk/feed",
             /* "jid": "website@evilprofessor.co.uk" */
            },
            function(error, data) { console.log(error, data) }
        )
        </pre>
        
        <p>If no JID is provided this defaults to the jid used to log in to the 
        server with.</p>
        
        <p>If a subscription is successful then the response will look like the following:</p>
        
        <pre class="example">
        {
            "feed": "http://www.evilprofessor.co.uk/feed",
            "jid": "lloyd@evilprofessor.co.uk/sky",
            "title": "Building a time machine from a Delorean",
            "status": {
                "response": 200,
                "fetch": {
                    "last": "1955-11-05T06:30:11-08:00",
                    "next": "1985-10-27T01:22:38-08:00",
                    "period": "3600"
                },
                "parsed": "1985-10-27T10:30:00-08:00",
                "maintenance": "1985-10-27T09:59:00-08:00",
                "message": "9718 bytes fetched in 1.462708s : 2 new entries."
            }
        }
        </pre>
        
        <h3>Unsubscribe from a feed</h3>
        
        <pre class="out callback" message="xmpp.superfeedr.unsubscribe">
        socket.emit(
            'xmpp.superfeedr.unsubscribe',
            {
                "feed": "https://github.com/lloydwatkin.atom",
             /* "jid": "github@evilprofessor.co.uk" */
            },
            function(error, data) { console.log(error, data) }
        )
        </pre>
        
        <p>If there is no error `<em>data</em>` will simply be <b>true</b>.

        <h3>Get Subscriptions</h3>

        <pre class="out callback" message="xmpp.superfeedr.subscriptions">
        socket.emit(
            'xmpp.superfeedr.subscriptions',
            {
              /* "page": 1 */
            },
            function(error, data) { console.log(error, data) }
        </pre>

        <p>Response will then appear as follows:</p>

        <pre class="example">
        [
            {
                "feed": "http://www.evilprofessor.co.uk/feed",
                "jid": "lloyd@evilprofessor.co.uk/sky",
                "title": "Building a time machine from a Delorean",
                "status": {
                    "response": 200,
                    "fetch": {
                        "last": "1955-11-05T06:30:11-08:00",
                        "next": "1985-10-27T01:22:38-08:00",
                        "period": "3600"
                    },
                    "parsed": "1985-10-27T10:30:00-08:00",
                    "maintenance": "1985-10-27T09:59:00-08:00",
                    "message": "9718 bytes fetched in 1.462708s : 2 new entries."
                }
            }
        ]
        </pre>

        <h3>Items</h3>

        <p>An example of an item is as follows:</p>

        <pre class="example">
        {
            "title": "Hello world",
            "id": "http://push-pub.appspot.com/feed/793002",
            "updated": "2013-05-12T15:34:15Z",
            "published": "2013-05-12T15:34:15Z",
            "content": { 
                "type": "text",
                "content": "Get a notification"
            },  
            "links": [
                {
                    "title": "Hello world",
                    "rel": "alternate",
                    "href": "http://push-pub.appspot.com/entry/793002",
                    "type": "text/html"
                }   
            ]   
        }
        </pre>

        <h4>New Item Notifications</h4>

        <pre class="in" message="xmpp.superfeedr.push">
        {
            meta: {
                "response": 200,
                "fetch": {
                    "last": "1955-11-05T06:30:11-08:00",
                    "next": "1985-10-27T01:22:38-08:00",
                    "period": "3600"
                },
                "parsed": "1985-10-27T10:30:00-08:00",
                "maintenance": "1985-10-27T09:59:00-08:00",
                "message": "9718 bytes fetched in 1.462708s : 2 new entries."
             },
             items: "items": [
                 { ... }
             ]
        }
        </pre>

        <h4>Item Retrieval</h4>
        
 
        <p><strong>Note:</strong> Superfeedr inform me that this is currently being 
        rewritten and suggest in the short term you use the HTTP API in order to 
        retrieve posts. <strong>Not functional and therefore not complete.</strong></p>
        
        <pre class="out callback" message="xmpp.superfeedr.retrieve">
        socket.emit(
            'xmpp.superfeedr.retrieve',
            {
                "feed": "http://www.evilprofessor.co.uk/feed"
            },
            function(error, data) { console.log(error, data) }
        )
        </pre>
        
        <p>Example response:</p>

        <pre class="example">
        {
            meta: {
                "response": 200,
                "fetch": {
                    "last": "1955-11-05T06:30:11-08:00",
                    "next": "1985-10-27T01:22:38-08:00",
                    "period": "3600"
                },  
                "parsed": "1985-10-27T10:30:00-08:00",
                "maintenance": "1985-10-27T09:59:00-08:00",
                "message": "9718 bytes fetched in 1.462708s : 2 new entries."
             },
             items: [
                { ... }
             ]
        }
        </pre>
 
        <script type="text/javascript" src="/scripts/toc.js"></script>
<% include ./partials/footer %>
